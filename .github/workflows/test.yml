name: PHPUnit

on: [ push, pull_request ]

jobs:
  ci:
    name: Test on PHP ${{ matrix.php-version }}
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '8.0', '8.1' ]
      max-parallel: 5
    env:
      SW_VERSION: ${{ matrix.swoole-version }}
      PHP_VERSION: ${{ matrix.php-version }}
      MYSQL_DSN: "mysql:host=localhost;dbname=test"
      MYSQL_USER: "root"
      PGSQL_DSN: "pgsql:host=localhost;dbname=test;"
      PGSQL_USER: "postgres"
      MEMCACHE_HOST: "127.0.0.1"
      REDIS_URI: "redis://localhost"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          ini-values: opcache.enable_cli=0
          coverage: none
          extensions: pdo, pdo_mysql, redis, memcached
      - name: Setup MySQL ...
        run: |
          docker run -e TZ=Asia/Shanghai -e MYSQL_ALLOW_EMPTY_PASSWORD=true -e MYSQL_ROOT_HOST=% -e MYSQL_DATABASE=hyperf -v $PWD/.github/init.sql:/docker-entrypoint-initdb.d/init.sql -d -p 3306:3306 --name mysql mysql/mysql-server:5.7
          docker run -p 6379:6379 -d --name redis redis:latest
          docker run --name memcached -p 11211:11211 -d memcached:latest
      - name: Show Environment
        run: |
          php -v
          php -m
          php -i
      - name: Setup Packages
        run: composer update -o
      - name: Run Test Cases
        run: |
          vendor/bin/phpunit
